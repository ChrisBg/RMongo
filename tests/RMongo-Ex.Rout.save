R version 2.11.1 (2010-05-31)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("RUnit")
> library("RMongo")
Loading required package: rJava
Loading required package: rjson
Loading required package: plyr
> library('rJava')
> library('rjson')
> library('plyr')
> 
> test.dbInsertDocument <- function(){
+   mongo <- mongoDbConnect("test")
+   output <- dbInsertDocument(mongo, "test_data", '{"foo": "bar"}')
+   dbDisconnect(mongo)
+ 
+   checkEquals("ok", output)
+ }
> 
> test.dbGetQuery <- function(){
+   mongo <- mongoDbConnect("test")
+   output <- dbInsertDocument(mongo, "test_data", '{"foo": "bar"}')
+   output <- dbGetQuery(mongo, "test_data", '{"foo": "bar"}', format='json')
+   dbDisconnect(mongo)
+   
+   checkEquals("bar", output[[1]]$foo)
+ }
> 
> test.dbGetQueryDataFrameFormat <- function(){
+   mongo <- mongoDbConnect('test')
+   output <- dbInsertDocument(mongo, "test_data", '{"foo": "bar"}')
+   output <- dbGetQuery(mongo, 'test_data', '{"foo":"bar"}', format='data.frame')
+   dbDisconnect(mongo)
+   
+   checkEquals("bar", as.character(output[1,]$foo))
+ }
> 
> test.dbGetQueryWithEmptyCollection <- function(){
+   mongo <- mongoDbConnect('test')
+   output <- dbGetQuery(mongo, 'test_data', '{"EMPTY": "EMPTY"}', format='json')
+   dbDisconnect(mongo)
+   checkEquals(list(), output)
+ }
> 
> test.dbGetQuerySorting <- function(){
+   #insert the records using r-mongo-scala project
+   mongo <- mongoDbConnect("test")
+   dbInsertDocument(mongo, "test_data", '{"foo": "bar"}')
+   dbInsertDocument(mongo, "test_data", '{"foo": "newbar"}')
+   
+   output <- dbGetQuery(mongo, "test_data", '{ "$query": {}, "$orderby": { "foo": -1 } }}', format='json')
+   dbDisconnect(mongo)
+   
+   checkEquals("newbar", output[[1]]$foo)
+ }
> 
> 
> test.dbInsertDocument()
[1] TRUE
> test.dbGetQuery()
[1] TRUE
> test.dbGetQueryDataFrameFormat()
[1] TRUE
> test.dbGetQueryWithEmptyCollection()
[1] TRUE
> test.dbGetQuerySorting()
[1] TRUE
> 

